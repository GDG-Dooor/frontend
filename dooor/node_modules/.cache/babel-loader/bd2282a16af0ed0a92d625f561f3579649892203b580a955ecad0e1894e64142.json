{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MINYONG\\\\Desktop\\\\frontend\\\\dooor\\\\src\\\\components\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { chatService } from '../services/chatService';\nimport { useAuth } from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chat = ({\n  userName\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    accessToken,\n    refreshToken,\n    updateAccessToken\n  } = useAuth();\n  const handleSendMessage = useCallback(async () => {\n    if (!message.trim() || isLoading) return;\n    try {\n      setIsLoading(true);\n      // 사용자 메시지를 채팅 기록에 추가\n      setChatHistory(prev => [...prev, {\n        message,\n        isUser: true\n      }]);\n      setMessage('');\n\n      // 챗봇 응답 요청\n      const response = await chatService.sendMessage(message, userName, accessToken);\n\n      // 챗봇 응답을 채팅 기록에 추가\n      setChatHistory(prev => [...prev, {\n        message: response,\n        isUser: false\n      }]);\n    } catch (error) {\n      if (error instanceof Error && error.message === 'TOKEN_EXPIRED') {\n        try {\n          // 토큰 갱신 시도\n          const newAccessToken = await chatService.refreshToken(refreshToken);\n          updateAccessToken(newAccessToken);\n\n          // 갱신된 토큰으로 메시지 재전송\n          const response = await chatService.sendMessage(message, userName, newAccessToken);\n          setChatHistory(prev => [...prev, {\n            message: response,\n            isUser: false\n          }]);\n        } catch (refreshError) {\n          console.error('토큰 갱신 실패:', refreshError);\n          // 로그인 페이지로 리다이렉트 등 추가 처리\n        }\n      } else {\n        console.error('메시지 전송 실패:', error);\n        setChatHistory(prev => [...prev, {\n          message: '메시지 전송에 실패했습니다. 다시 시도해주세요.',\n          isUser: false\n        }]);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, [message, userName, accessToken, refreshToken, updateAccessToken, isLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n      children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${chat.isUser ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-[70%] rounded-lg p-3 ${chat.isUser ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-medium mb-1\",\n            children: chat.isUser ? userName : '챗봇'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: chat.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && !isLoading && handleSendMessage(),\n          className: \"flex-1 border rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: isLoading,\n          className: `px-6 py-2 rounded-lg transition-colors ${isLoading ? 'bg-gray-400 text-white cursor-not-allowed' : 'bg-blue-500 text-white hover:bg-blue-600'}`,\n          children: isLoading ? '전송 중...' : '전송'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"fj48GLLNzvGknpoUTvErC6Hubi0=\", false, function () {\n  return [useAuth];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useCallback","useState","chatService","useAuth","jsxDEV","_jsxDEV","Chat","userName","_s","message","setMessage","chatHistory","setChatHistory","isLoading","setIsLoading","accessToken","refreshToken","updateAccessToken","handleSendMessage","trim","prev","isUser","response","sendMessage","error","Error","newAccessToken","refreshError","console","className","children","map","chat","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyPress","key","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MINYONG/Desktop/frontend/dooor/src/components/Chat.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\n\r\nimport { chatService } from '../services/chatService';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\ninterface ChatProps {\r\n  userName: string;\r\n}\r\n\r\nexport const Chat: React.FC<ChatProps> = ({ userName }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [chatHistory, setChatHistory] = useState<Array<{message: string; isUser: boolean}>>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { accessToken, refreshToken, updateAccessToken } = useAuth();\r\n\r\n  const handleSendMessage = useCallback(async () => {\r\n    if (!message.trim() || isLoading) return;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      // 사용자 메시지를 채팅 기록에 추가\r\n      setChatHistory(prev => [...prev, { message, isUser: true }]);\r\n      setMessage('');\r\n\r\n      // 챗봇 응답 요청\r\n      const response = await chatService.sendMessage(message, userName, accessToken);\r\n      \r\n      // 챗봇 응답을 채팅 기록에 추가\r\n      setChatHistory(prev => [...prev, { message: response, isUser: false }]);\r\n    } catch (error) {\r\n      if (error instanceof Error && error.message === 'TOKEN_EXPIRED') {\r\n        try {\r\n          // 토큰 갱신 시도\r\n          const newAccessToken = await chatService.refreshToken(refreshToken);\r\n          updateAccessToken(newAccessToken);\r\n          \r\n          // 갱신된 토큰으로 메시지 재전송\r\n          const response = await chatService.sendMessage(message, userName, newAccessToken);\r\n          setChatHistory(prev => [...prev, { message: response, isUser: false }]);\r\n        } catch (refreshError) {\r\n          console.error('토큰 갱신 실패:', refreshError);\r\n          // 로그인 페이지로 리다이렉트 등 추가 처리\r\n        }\r\n      } else {\r\n        console.error('메시지 전송 실패:', error);\r\n        setChatHistory(prev => [...prev, { \r\n          message: '메시지 전송에 실패했습니다. 다시 시도해주세요.', \r\n          isUser: false \r\n        }]);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [message, userName, accessToken, refreshToken, updateAccessToken, isLoading]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full\">\r\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n        {chatHistory.map((chat, index) => (\r\n          <div\r\n            key={index}\r\n            className={`flex ${chat.isUser ? 'justify-end' : 'justify-start'}`}\r\n          >\r\n            <div\r\n              className={`max-w-[70%] rounded-lg p-3 ${\r\n                chat.isUser\r\n                  ? 'bg-blue-500 text-white'\r\n                  : 'bg-gray-200 text-gray-800'\r\n              }`}\r\n            >\r\n              <p className=\"text-sm font-medium mb-1\">\r\n                {chat.isUser ? userName : '챗봇'}\r\n              </p>\r\n              <p>{chat.message}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"border-t p-4\">\r\n        <div className=\"flex space-x-2\">\r\n          <input\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && !isLoading && handleSendMessage()}\r\n            className=\"flex-1 border rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            placeholder=\"메시지를 입력하세요...\"\r\n            disabled={isLoading}\r\n          />\r\n          <button\r\n            onClick={handleSendMessage}\r\n            disabled={isLoading}\r\n            className={`px-6 py-2 rounded-lg transition-colors ${\r\n              isLoading \r\n                ? 'bg-gray-400 text-white cursor-not-allowed'\r\n                : 'bg-blue-500 text-white hover:bg-blue-600'\r\n            }`}\r\n          >\r\n            {isLoading ? '전송 중...' : '전송'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}